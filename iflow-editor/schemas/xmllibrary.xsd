<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
	targetNamespace="http://www.iknow.pt/XmlLibrary"
	xmlns="http://www.iknow.pt/XmlLibrary"
	elementFormDefault="qualified">

  <xsd:annotation >
    <xsd:documentation xml:lang="en">
      Library schema for Flow Editor.
      Copyright 2005 iKnow.
    </xsd:documentation>
  </xsd:annotation>

  <!-- XmlFlow -->
  <xsd:element name="XmlLibrary">
      <xsd:complexType>
          <xsd:sequence>
              <xsd:element name="name"           type="xsd:string"/>
              <xsd:element name="version"        type="xsd:string"/>
              <xsd:element name="author"         type="xsd:string"/>
              <xsd:element name="description"    type="xsd:string"/>
              <xsd:element name="XmlBlock"       type="XmlBlockType"       minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:complexType>
  </xsd:element>

   <!-- XmlBlockType -->
  <xsd:complexType name="XmlBlockType">
    <xsd:sequence>
      <xsd:element name="class"                type="xsd:string">
      	<xsd:annotation>
      	  <xsd:documentation>Nome da classe que implementa o bloco no iFlow. O "package" correcto será acrescentado.</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="XmlPort"              type="XmlPortType"   minOccurs="0" maxOccurs="unbounded">
      	<xsd:annotation>
      	  <xsd:documentation>Permite definir um porto de ligação entre blocos.</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="XmlAttribute"         type="XmlAttributeType"   minOccurs="0" maxOccurs="unbounded">
      	<xsd:annotation>
      	  <xsd:documentation>Define um atributo do bloco</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="image"                type="xsd:string">
      	<xsd:annotation>
      	  <xsd:documentation>Imagem/icon que representa o bloco</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="color"			       type="XmlBlockColor" minOccurs="0" >
      	<xsd:annotation>
      	  <xsd:documentation>Cor da borda do bloco</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="className"            type="xsd:string" minOccurs="0" >
      	<xsd:annotation>
      	  <xsd:documentation>Nome (completo) da classe que permite alterar os atributos do bloco no Editor.</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="size"                 type="SizeType" minOccurs="0" >
      	<xsd:annotation>
      	  <xsd:documentation>Não definir!</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="fileName"             type="xsd:string" minOccurs="0">
      	<xsd:annotation>
      	  <xsd:documentation>Não definir!</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="description"          type="xsd:string" minOccurs="0" >
      	<xsd:annotation>
      	  <xsd:documentation>Nome a utilizar na apresentação do bloco. Se não for especificado, usa o valor de class.</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="automatic"                 type="BoolType" minOccurs="0" >
      	<xsd:annotation>
      	  <xsd:documentation>O bloco é automático ou não.
      	   Se o bloco for automático é SEMPRE adicionado ao fluxo e NÃO pode ser REMOVIDO.
      	   Um bloco automático não está disponível na biblioteca para ser adicionado ao fluxo.
      	   Aceita os seguintes valores: yes, no, true, false.
      	   </xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>


  <!-- XmlPortType -->
  <xsd:complexType name="XmlPortType">
    <xsd:sequence>
      <xsd:element name="name"                 type="xsd:string">
      	<xsd:annotation>
      	  <xsd:documentation>Nome do porto. Tem que existir um porto com o mesmo nome no bloco do iFlow.</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="description"          type="xsd:string">
      	<xsd:annotation>
      	  <xsd:documentation>Descrição do porto</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="in_out"               type="InOutType">
      	<xsd:annotation>
      	  <xsd:documentation>Tipo de bloco. Pode ser entrada (in) ou saída (out).</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="position"             type="XmlPositionType"   minOccurs="0" maxOccurs="1">
      	<xsd:annotation>
      	  <xsd:documentation>Posição relativa do porto em relação ao bloco.</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>


  <!-- XmlAttributeType -->
  <xsd:complexType name="XmlAttributeType">
    <xsd:sequence>
      <xsd:element name="name"                type="xsd:string">
      	<xsd:annotation>
      	  <xsd:documentation>Nome do atributo</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="description"         type="xsd:string">
      	<xsd:annotation>
      	  <xsd:documentation>Descrição do atributo</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="value"               type="xsd:string" nillable="true" minOccurs="0">
      	<xsd:annotation>
      	  <xsd:documentation>Valor por omissão a atribuir ao atributo</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
      <xsd:element name="valueType"			  type="xsd:string"   minOccurs="0" maxOccurs="unbounded">
      	<xsd:annotation>
      	  <xsd:documentation>Tipo de dados</xsd:documentation>
      	</xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>


  <!-- XmlPositionType -->
  <xsd:complexType name="XmlPositionType">
    <xsd:sequence>
      <xsd:element name="x"                   type="xsd:integer"/>
      <xsd:element name="y"                   type="xsd:integer"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- XmlBlockColor -->
  <xsd:complexType name="XmlBlockColor">
  	<xsd:attribute name="r" type="RGBType" use="required" />
  	<xsd:attribute name="g" type="RGBType" use="required"/>
  	<xsd:attribute name="b" type="RGBType" use="required"/>
  	<xsd:attribute name="a" type="RGBType" use="required"/>
  </xsd:complexType>

  <!-- SizeType -->
  <xsd:complexType name="SizeType">
    <xsd:sequence>
      <xsd:element name="x"                   type="xsd:integer"/>
      <xsd:element name="y"                   type="xsd:integer"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- InOut type -->
  <xsd:simpleType name="InOutType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="in"/>
      <xsd:enumeration value="out"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- Bool type -->
  <xsd:simpleType name="BoolType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="yes"/>
      <xsd:enumeration value="no"/>
      <xsd:enumeration value="true"/>
      <xsd:enumeration value="false"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="RGBType">
  	<xsd:restriction base="xsd:integer">
  		<xsd:minInclusive value="0" />
  		<xsd:maxInclusive value="255" />
  	</xsd:restriction>
  </xsd:simpleType>


</xsd:schema>
