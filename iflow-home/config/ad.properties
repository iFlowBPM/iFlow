# BASIC AD SERVER CONFIG, provider url is calculated like ldap://SERVER_NAME/SEARCH_BASE
SERVER_NAME=sede
SEARCH_BASE=OU=ObrecolGest,DC=obrecol,DC=svntdc,DC=pt

# LDAP authentication. If commented or empty, bind anonymouslly.
# BIND_DN is identity of the principal for authenticating the caller to the service
# BIND_PASSWD is credentials of the principal for authenticating the caller to the service
BIND_DN=cn=lookup,cn=users,dc=obrecol,dc=svntdc,dc=pt
BIND_PASSWD=puk00L

# USER AUTENTICATION QUERIES
AUTH_USER_BY_SEARCH=false
# SEARCH_BY_UID query for searching a user with provided username, required in user authentication
SEARCH_BY_UID=(&(sAMAccountName={0})(!(userAccountControl:1.2.840.113556.1.4.803:=2)))
# SEARCH_BY_FIELD query for searching a user using a searchField and userId, used in BlockGetAuthInfo 
SEARCH_BY_FIELD=(&({0}={1})(!(userAccountControl:1.2.840.113556.1.4.803:=2)))
# USER_BIND_DN used dor user authentication, value can be either {0},{1} or {0}
USER_BIND_DN={0},{1}

# USER DATA QUERIES
# LIST_PROFILES query for getting all the profiles in the Directory
LIST_PROFILES=(&(objectClass=group)(!(groupType=8)))
# LIST_USER_PROFILES query for getting the profiles of a user in the Directory
LIST_USER_PROFILES=(&(objectClass=group)(!(groupType=8))(member={0}))
# LIST_PROFILE_USERS query for getting users in given profile in the Directory
LIST_PROFILE_USERS=(&(objectClass=user)(memberOf={0}))
# SEARCH_BY_COMPLEX_ID query for getting users in profile, LIST_PROFILE_USERS returns a list of users with user_principal_name that will be used as argument 
SEARCH_BY_COMPLEX_ID=(&(userPrincipalName={0})(!(userAccountControl:1.2.840.113556.1.4.803:=2)))

# ORGANIZATIONAL QUERIES
# GET_UNIT query for getting organic unit in Directory
GET_UNIT=(&(ou={0})(objectClass=organizationalUnit))
# GET_UNIT_PARENT query for getting organic unit parent in Directory
GET_UNIT_PARENT=(&(ou={0})(objectClass=organizationalUnit))
# GET_ORG query for getting organization in directory
GET_ORG=(&(o={0})(objectClass=organization))
# LIST_ORGS query for getting ALL organizations in directory
LIST_ORGS=(&(o=*)(objectClass=organization))

#Mapping files for users and organic units
USER_MAPPING_FILE=mappings/ad_user_mapping.properties
ORG_MAPPING_FILE=mappings/ad_org_mapping.properties

# ORG_ADM_PROFILE profile of organization admin
ORG_ADM_PROFILE=CN=iFlowAdmins,OU=ObrecolGest

# DO NOT USE "/" CHAR !!!
PROFILE_SEPARATOR=/

# Single Organization Properties
ORGID=2
ORGNAME=Obrecol
ORGDESCRIPTION=Obrecol Description

# STRIP_DOMAIN strips domain when username comes from login page in the form DOMAIN/USER or USER@DOMAIN
STRIP_DOMAIN=true

# IMPORTING USER INFORMATION FROM AD TO DATABASE

#Ligar ou não o manager que Sincroniza os users
USERSYNC_ON=true
#Tempo de intervalo (em minutos) em que corre o Manager que sincroniza os users
USERSYNC_THREAD_CICLE=200
#OrgId dos Perfis a Sincronizar
USERSYNC_ORGID=1
#Unit id de defeito para onde irão todos os novos users importado
USERSYNC_UNITID=1
# Se esta propriedade estiver a true a obtenção de users será feita por página não sendo usada a propriedade LIST_USERS
# mas sim LIST_USERS_BY_PAGE
SEARCH_BY_PAGE=false
# Query para obter todos os user da AD. ATENÇÃO: Se existirem mais utilizadores na AD do que o limite que é possível 
# obter teremos que obter os utilizadores por páginas usado a query LIST_USERS_BY_PAGE 
LIST_USERS=(&(sAMAccountName=*)(objectCategory=person)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))
#Número máximo de users por página, tem que ser menor que o limite do AD senão pode não importar todos
LIST_USERS_MAX_PAGE=1000
#Para obter os user por páginas esta query deve permitir filtar pelas iniciais: 1*, 2* , ..., 9*, a*, b*, c*
LIST_USERS_BY_PAGE=(&(sAMAccountName={0}*)(objectCategory=person)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))
#Nesta query devem ser obtidos todos os users que não estão nos casos anteriores (users que não começam por números ou letras)
LIST_USERS_BY_PAGE_OTHERS=(&(!(&(sAMAccountName>=0)(sAMAccountName<=9)))(!(&(sAMAccountName>=a)(sAMAccountName<=z)))(objectCategory=person)(!(userAccountControl:1.2.840.113556.1.4.803:=2)))
# Lista, separada por virgula, de todas as propriedades que deverão ser actualizadas na BD caso o user já exista.
# Os valores possíveis são:
# EMAIL_ADDRESS,EMPLOYEE_NUMBER,MOBILE_NUMBER,GENDER,PHONE_NUMBER,FAX_NUMBER,COMPANY_PHONE,DEPARTMENT,MANAGER,TITLE,FIRST_NAME,LAST_NAME,ORGADM,PASSWORD_RESET,ORGADM_USERS,ORGADM_FLOWS,ORGADM_PROCESSES,ORGADM_RESOURCES,ORGADM_ORG
PROPERTIES_TO_UPDATE=EMAIL_ADDRESS;
# MAPEAMENTO DAS PROPRIEDADES DO AD PARA AS PROPRIEDADES DO IFLOW. Estas serão as únicas propriedades a serem importadas
# Propriedade que servirá para comparar com o username da BD
ID=sAMAccountName
# Propriedades a importar
USERNAME=sAMAccountName
EMAIL_ADDRESS=mail
EMPLOYEE_NUMBER=employeeID
#MOBILE_NUMBER=
#GENDER=
#PHONE_NUMBER=
#FAX_NUMBER=
#COMPANY_PHONE=
#DEPARTMENT=
#MANAGER=
#TITLE=
FIRST_NAME=displayName
#LAST_NAME=
#ORGADM=
#ORGADM_USERS=
#ORGADM_FLOWS=
#ORGADM_PROCESSES=
#ORGADM_RESOURCES=
#ORGADM_ORG=
